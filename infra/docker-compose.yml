version: "3.4"

services:

  webui:
    container_name: 'demo_webui'
    image: 'demo_webui'
    build:
      context: ./../
      dockerfile: ./infra/webui-dockerfile
    ports:
      - 5500:80

  webapi:
    container_name: 'demo_webapi'
    image: 'demo_webapi'
    build:
      context: ./../
      dockerfile: ./infra/webapi-dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerDev
    ports:
      - 5501:80
    depends_on:
      - sqlserver
      - rabbitmq
      - redis

  sqlserver:
    container_name: 'demo_sqlserver'
    image: "mcr.microsoft.com/mssql/server"
    user: root
    environment:
      SA_PASSWORD: "P@ssw0rd!12345"
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
    volumes:
      - sqlserver_data:/var/opt/mssql/data
    ports:
      - 5502:1433

  rabbitmq:
    container_name: 'demo_rabbitmq'
    image: rabbitmq:3-management-alpine
    ports:
      - 5503:5672
      - 5504:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log_data:/var/log/rabbitmq

  redis:
    container_name: 'demo_redis'
    image: redis:alpine3.16
    ports:
      - 5505:6379
    volumes:
      - redis_data:/data

  redis-commander:
    container_name: demo_redis_commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 5506:8081

  elasticsearch:
    container_name: demo_elasticsearch
    image: elasticsearch:7.9.2
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 5507:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: demo_kibana
    image: kibana:7.9.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5508:5601
    depends_on:
      - elasticsearch

volumes:
  sqlserver_data:
  rabbitmq_data:
  rabbitmq_log_data:
  redis_data:
  elasticsearch_data: